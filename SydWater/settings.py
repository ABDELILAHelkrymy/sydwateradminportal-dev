"""
Django settings for SydWater project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
USE_L10N = False
load_dotenv()
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'iz*awtgpi74a4dj@(g!4y)8_x7$k#zlzli7==89&apy=03m(8*'

SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'user',
    'product',
    'bootstrap_modal_forms',
    'lrs',
    'raties',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'SydWater.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'SydWater.context_processors.export_environment_variables',
            ],
        },
    },
]

WSGI_APPLICATION = 'SydWater.wsgi.application'

TEMPLATE_LOADERS = (
    'django.template.loaders.app_directories.load_template_source',
)

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv("DATABASE_NAME"),
        'USER':os.getenv("DATABASE_USER"),
        'PASSWORD':os.getenv("DATABASE_PASSWORD"),
        'HOST':os.getenv("DATABASE_HOST"),
        'PORT':os.getenv("DATABASE_PORT"),
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            }

    },
    'hazlrs_db': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv("LRS_DATABASE_NAME"),
        'USER':os.getenv("LRS_DATABASE_USER"),
        'PASSWORD':os.getenv("LRS_DATABASE_PASSWORD"),
        'HOST':os.getenv("LRS_DATABASE_HOST"),
        'PORT':os.getenv("LRS_DATABASE_PORT"),
    },
    'raties_db': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv("RATIES_DATABASE_NAME"),
        'USER': os.getenv("RATIES_DATABASE_USER"),
        'PASSWORD': os.getenv("RATIES_DATABASE_PASSWORD"),
        'HOST': os.getenv("RATIES_DATABASE_HOST"),
        'PORT': os.getenv("RATIES_DATABASE_PORT"),
    },
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/users/login/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

#APICONFIGURATIONS

API_URL = os.getenv("API_URL")
INVOICE_URL = os.getenv("INVOICE_URL")
AUTH_TOKEN = 'Bearer CIUi51PTEA4bPR9jksNecoG.6oJPNtkpKMyUf3CG4GTEtnYi'

LRS_INVOICING_URL = os.getenv("LRS_INVOICING_URL")
HAZLRS_API_URL = os.getenv("HAZLRS_API_URL")
LRS_TOKEN = os.getenv("LRS_beartoken")

INVOICE_FILE_DIR = os.path.abspath(os.getenv("INVOICE_FILE_DIR"))